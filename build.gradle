plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.redbird'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2020.0.1")
	set('karateApiVersion', "0.9.6")
}

dependencies {
	// web
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// info + docs
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.6.4'
	implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.6'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.5'
	// spring cloud
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	//dev
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//test
//	testCompile "com.intuit.karate:karate-apache:${karateApiVersion}"
//	testCompile "com.intuit.karate:karate-junit5:${karateApiVersion}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

springBoot{
	buildInfo()
}

//sourceSets {
//	test {
//		resources {
//			srcDir file('src/test/java')
//			exclude '**/*.java'
//		}
//	}
//}

//test {
//	useJUnitPlatform()
//	systemProperty "karate.options", System.properties.getProperty("karate.options")
//	systemProperty "karate.env", System.properties.getProperty("karate.env")
//	outputs.upToDateWhen { false }
//	testLogging.showStandardStreams = true
//}

//task karateDebug(type: JavaExec) {
//	classpath = sourceSets.test.runtimeClasspath
//	main = 'com.intuit.karate.cli.Main'
//}
